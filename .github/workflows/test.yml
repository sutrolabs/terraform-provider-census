name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Linting and formatting checks
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Run go fmt
        run: |
          fmt_output=$(go fmt ./...)
          if [ -n "$fmt_output" ]; then
            echo "The following files are not formatted:"
            echo "$fmt_output"
            exit 1
          fi

  # Unit tests (no external dependencies, fast)
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        go-version: ['1.21', '1.22']

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: make test

      - name: Generate coverage report
        if: matrix.go-version == '1.22'
        run: |
          go test ./... -short -coverprofile=coverage.out -covermode=atomic
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.22'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          fail_ci_if_error: false

      - name: Upload coverage artifact
        if: matrix.go-version == '1.22'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  # Build verification
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download dependencies
        run: go mod download

      - name: Build provider
        run: make build

      - name: Verify binary
        run: |
          if [ ! -f bin/terraform-provider-census ]; then
            echo "Provider binary not found"
            exit 1
          fi
          file bin/terraform-provider-census

  # Integration tests (requires Census staging + external services)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [lint, unit-tests, build]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download dependencies
        run: go mod download

      - name: Run integration tests
        env:
          TF_ACC: "1"
          CENSUS_BASE_URL: ${{ secrets.CENSUS_BASE_URL }}
          CENSUS_PERSONAL_ACCESS_TOKEN: ${{ secrets.CENSUS_PERSONAL_ACCESS_TOKEN }}
          CENSUS_TEST_REDSHIFT_HOST: ${{ secrets.CENSUS_TEST_REDSHIFT_HOST }}
          CENSUS_TEST_REDSHIFT_PORT: ${{ secrets.CENSUS_TEST_REDSHIFT_PORT }}
          CENSUS_TEST_REDSHIFT_DATABASE: ${{ secrets.CENSUS_TEST_REDSHIFT_DATABASE }}
          CENSUS_TEST_REDSHIFT_USERNAME: ${{ secrets.CENSUS_TEST_REDSHIFT_USERNAME }}
          CENSUS_TEST_REDSHIFT_PASSWORD: ${{ secrets.CENSUS_TEST_REDSHIFT_PASSWORD }}
          CENSUS_TEST_SALESFORCE_USERNAME: ${{ secrets.CENSUS_TEST_SALESFORCE_USERNAME }}
          CENSUS_TEST_SALESFORCE_INSTANCE_URL: ${{ secrets.CENSUS_TEST_SALESFORCE_INSTANCE_URL }}
          CENSUS_TEST_SALESFORCE_CLIENT_ID: ${{ secrets.CENSUS_TEST_SALESFORCE_CLIENT_ID }}
          CENSUS_TEST_SALESFORCE_JWT_SIGNING_KEY: ${{ secrets.CENSUS_TEST_SALESFORCE_JWT_SIGNING_KEY }}
          CENSUS_TEST_SALESFORCE_DOMAIN: ${{ secrets.CENSUS_TEST_SALESFORCE_DOMAIN }}
        run: |
          echo "Running integration tests against Census staging environment..."
          go test -v ./census/tests/provider/acceptance -timeout 60m