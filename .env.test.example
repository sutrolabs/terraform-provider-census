# Census Terraform Provider - Test Environment Configuration
# Copy this file to .env.test and fill in your actual credentials
#
# IMPORTANT: .env.test is gitignored and should NEVER be committed
# This example file is safe to commit (contains only placeholders)
#
# BEST PRACTICE: Wrap all credential values in single quotes (') to prevent
# bash from interpreting special characters when sourcing this file.
# Example: MYVAR='value-with-special-chars=='

# ============================================================================
# Phase 1: Unit Tests
# ============================================================================
# Unit tests require NO credentials - they test pure Go logic
# These tests validate helper functions, data transformations, and internal logic
#
# Run with: make test-unit
#
# No configuration needed for unit tests!

# ============================================================================
# Phase 2: Integration Tests
# ============================================================================
# Integration tests create real resources in the Census staging environment
# They test the complete resource lifecycle: create → read → update → delete
#
# Run with: make test-integration
#
# What the tests do:
# - Create temporary workspaces (automatically cleaned up)
# - Create source connections (Redshift)
# - Create destination connections (Salesforce)
# - Create syncs connecting sources to destinations
# - Test field mappings, schedules, alerts, etc.
# - Verify all CRUD operations work correctly
# - Clean up all resources after tests complete

# Required for integration tests
TF_ACC=1

# ============================================================================
# Census Staging Environment
# ============================================================================

# Census staging API credentials
# Get your token from: https://app.staging.getcensus.com/settings/developer
CENSUS_BASE_URL='https://app.staging.getcensus.com/api/v1'
CENSUS_PERSONAL_ACCESS_TOKEN='your-staging-personal-access-token-here'

# ============================================================================
# Redshift Credentials (for source connection tests)
# ============================================================================
# Tests will create a Redshift source connection to verify connectivity
# Read-only access is sufficient - tests do NOT modify your data
# Use a test/dev Redshift cluster, not production

CENSUS_TEST_REDSHIFT_HOST='your-redshift-cluster.region.redshift.amazonaws.com'
CENSUS_TEST_REDSHIFT_PORT='5439'
CENSUS_TEST_REDSHIFT_DATABASE='dev'
CENSUS_TEST_REDSHIFT_USERNAME='testuser'
CENSUS_TEST_REDSHIFT_PASSWORD='your-password-here'

# Optional: Schema for testing (defaults to public)
# CENSUS_TEST_REDSHIFT_SCHEMA=public

# ============================================================================
# Salesforce Credentials (for destination connection tests)
# ============================================================================
# IMPORTANT: Use a Salesforce SANDBOX, not production!
# Tests will create/delete Contact records for testing
#
# This provider uses JWT-based OAuth authentication (more secure than password).
# Get these from your Salesforce sandbox connected app setup.

# Salesforce user email
CENSUS_TEST_SALESFORCE_USERNAME='test@example.com'

# Instance URL (find in Salesforce: Setup → Company Information)
CENSUS_TEST_SALESFORCE_INSTANCE_URL='https://your-sandbox.develop.my.salesforce.com'

# Connected app Consumer Key (Setup → App Manager → Your Connected App)
CENSUS_TEST_SALESFORCE_CLIENT_ID='3MVG9...your-consumer-key...'

# JWT signing key (your RSA private key, with \n for newlines)
# Generate: openssl genrsa -out server.key 2048
# Format: Must include \n characters for line breaks
# IMPORTANT: Single quotes are REQUIRED to prevent bash interpretation errors
CENSUS_TEST_SALESFORCE_JWT_SIGNING_KEY='-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAK...\n-----END RSA PRIVATE KEY-----\n'

# Domain: "test.salesforce.com" for sandbox, "login.salesforce.com" for production
CENSUS_TEST_SALESFORCE_DOMAIN='test.salesforce.com'

# ============================================================================
# Setup Instructions
# ============================================================================
#
# 1. Get Census staging credentials:
#    a. Go to https://app.staging.getcensus.com
#    b. Sign up for a staging account (if you don't have one)
#    c. Navigate to Settings → Developer → Personal Access Tokens
#    d. Create a new token with full permissions for testing
#    e. Copy the token to CENSUS_PERSONAL_ACCESS_TOKEN above
#
# 2. Set up Redshift test cluster:
#    a. Use an existing dev/test Redshift cluster
#    b. Create a test user with read-only access: CREATE USER testuser ...
#    c. Grant minimal permissions: GRANT SELECT ON ALL TABLES IN SCHEMA public TO testuser
#    d. Tests only need to validate connection - no data is modified
#    e. Fill in CENSUS_TEST_REDSHIFT_* variables above
#
# 3. Set up Salesforce sandbox with JWT OAuth:
#    a. Log into your Salesforce sandbox (not production!)
#    b. Create a Connected App (Setup → App Manager → New Connected App):
#       - Enable OAuth Settings
#       - Select OAuth scopes: api, refresh_token, offline_access
#       - Enable "Use digital signatures"
#       - Upload your certificate (generated from server.key)
#    c. Generate RSA key pair:
#       openssl genrsa -out server.key 2048
#       openssl req -new -x509 -key server.key -out server.crt -days 365
#    d. Get Consumer Key (Client ID) from Connected App
#    e. Note: Client Secret is NOT needed for JWT authentication
#    f. Fill in CENSUS_TEST_SALESFORCE_* variables above
#    g. Ensure domain is "test.salesforce.com" for sandbox
#
# 4. Copy and configure:
#    cp .env.test.example .env.test
#    # Edit .env.test with your actual credentials
#    # IMPORTANT: Keep single quotes around all values
#    # Never commit .env.test!
#
# 5. Run tests:
#    make test-unit          # Fast, no credentials needed
#    make test-integration   # Slower, requires setup above
#
# ============================================================================
# What Integration Tests Verify
# ============================================================================
#
# Resource Management:
#   ✓ Workspace creation, updates, deletion
#   ✓ Source connection creation (Redshift)
#   ✓ Destination connection creation (Salesforce)
#   ✓ Sync configuration with all features
#   ✓ Dataset creation and management
#
# Sync Features Tested:
#   ✓ Field mappings: direct, constant, liquid templates, sync metadata
#   ✓ Run modes: daily, hourly, weekly, manual schedules
#   ✓ Alerts: failure, invalid records, runtime, status
#   ✓ Source types: tables, datasets
#   ✓ Paused/unpaused states
#
# Data Sources:
#   ✓ Reading workspace information
#   ✓ Reading source connection details
#   ✓ Reading destination connection details
#   ✓ Reading sync configurations
#
# Advanced Operations:
#   ✓ Terraform import functionality
#   ✓ Resource updates and drift detection
#   ✓ Proper cleanup with CheckDestroy
#
# ============================================================================
# Troubleshooting
# ============================================================================
#
# Connection Errors:
#   - Verify your Redshift cluster allows connections from your IP
#   - Check Redshift security groups and network ACLs
#   - Confirm username/password are correct
#   - Try connecting with psql first to verify credentials
#
# Salesforce Errors:
#   - Ensure you're using a SANDBOX, not production
#   - Verify Connected App is configured with correct OAuth scopes
#   - Check that JWT signing key format includes \n for newlines
#   - Confirm domain matches your environment (test.salesforce.com for sandbox)
#   - Verify user has API access and necessary permissions
#   - Check instance_url is correct (from Salesforce Company Information)
#
# Census API Errors:
#   - Verify you're using staging URL: https://app.staging.getcensus.com
#   - Check that your personal access token hasn't expired
#   - Ensure token has full permissions for testing
#
# Test Failures:
#   - Check .env.test file exists and is properly formatted
#   - Verify TF_ACC=1 is set (required for integration tests)
#   - Review test output for specific error messages
#   - Try running with increased timeout: -timeout 120m
#
# ============================================================================
# CI/CD Configuration
# ============================================================================
#
# For GitHub Actions or other CI systems:
#
# 1. Add credentials as repository secrets:
#    - CENSUS_BASE_URL
#    - CENSUS_PERSONAL_ACCESS_TOKEN
#    - CENSUS_TEST_REDSHIFT_HOST
#    - CENSUS_TEST_REDSHIFT_PASSWORD
#    - CENSUS_TEST_SALESFORCE_PASSWORD
#    - CENSUS_TEST_SALESFORCE_SECURITY_TOKEN
#    (etc. for all required variables)
#
# 2. In your CI workflow, export as environment variables:
#    env:
#      TF_ACC: "1"
#      CENSUS_BASE_URL: ${{ secrets.CENSUS_BASE_URL }}
#      CENSUS_PERSONAL_ACCESS_TOKEN: ${{ secrets.CENSUS_PERSONAL_ACCESS_TOKEN }}
#      # ... other variables
#
# 3. Run tests:
#    - make test-unit (always run, fast)
#    - make test-integration (run on PR, slower)
#
# ============================================================================
